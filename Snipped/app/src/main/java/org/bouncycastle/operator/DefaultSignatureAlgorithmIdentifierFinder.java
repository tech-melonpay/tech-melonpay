package org.bouncycastle.operator;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import org.bouncycastle.asn1.ASN1Encodable;
import org.bouncycastle.asn1.ASN1Integer;
import org.bouncycastle.asn1.ASN1ObjectIdentifier;
import org.bouncycastle.asn1.DERNull;
import org.bouncycastle.asn1.bc.BCObjectIdentifiers;
import org.bouncycastle.asn1.bsi.BSIObjectIdentifiers;
import org.bouncycastle.asn1.cryptopro.CryptoProObjectIdentifiers;
import org.bouncycastle.asn1.eac.EACObjectIdentifiers;
import org.bouncycastle.asn1.edec.EdECObjectIdentifiers;
import org.bouncycastle.asn1.gm.GMObjectIdentifiers;
import org.bouncycastle.asn1.nist.NISTObjectIdentifiers;
import org.bouncycastle.asn1.oiw.OIWObjectIdentifiers;
import org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers;
import org.bouncycastle.asn1.pkcs.RSASSAPSSparams;
import org.bouncycastle.asn1.rosstandart.RosstandartObjectIdentifiers;
import org.bouncycastle.asn1.teletrust.TeleTrusTObjectIdentifiers;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;
import org.bouncycastle.asn1.x9.X9ObjectIdentifiers;
import org.bouncycastle.util.Strings;
import s3.b;

/* loaded from: classes3.dex */
public class DefaultSignatureAlgorithmIdentifierFinder implements SignatureAlgorithmIdentifierFinder {
    private static final ASN1ObjectIdentifier ENCRYPTION_DSA;
    private static final ASN1ObjectIdentifier ENCRYPTION_ECDSA;
    private static final ASN1ObjectIdentifier ENCRYPTION_ECGOST3410;
    private static final ASN1ObjectIdentifier ENCRYPTION_ECGOST3410_2012_256;
    private static final ASN1ObjectIdentifier ENCRYPTION_ECGOST3410_2012_512;
    private static final ASN1ObjectIdentifier ENCRYPTION_GOST3410;
    private static final ASN1ObjectIdentifier ENCRYPTION_RSA_PSS;
    private static Map algorithms = new HashMap();
    private static Set noParams = new HashSet();
    private static Map params = new HashMap();
    private static Set pkcs15RsaEncryption = new HashSet();
    private static Map digestOids = new HashMap();
    private static final ASN1ObjectIdentifier ENCRYPTION_RSA = PKCSObjectIdentifiers.rsaEncryption;

    static {
        ASN1ObjectIdentifier aSN1ObjectIdentifier = X9ObjectIdentifiers.id_dsa_with_sha1;
        ENCRYPTION_DSA = aSN1ObjectIdentifier;
        ASN1ObjectIdentifier aSN1ObjectIdentifier2 = X9ObjectIdentifiers.ecdsa_with_SHA1;
        ENCRYPTION_ECDSA = aSN1ObjectIdentifier2;
        ASN1ObjectIdentifier aSN1ObjectIdentifier3 = PKCSObjectIdentifiers.id_RSASSA_PSS;
        ENCRYPTION_RSA_PSS = aSN1ObjectIdentifier3;
        ENCRYPTION_GOST3410 = CryptoProObjectIdentifiers.gostR3410_94;
        ENCRYPTION_ECGOST3410 = CryptoProObjectIdentifiers.gostR3410_2001;
        ENCRYPTION_ECGOST3410_2012_256 = RosstandartObjectIdentifiers.id_tc26_gost_3410_12_256;
        ENCRYPTION_ECGOST3410_2012_512 = RosstandartObjectIdentifiers.id_tc26_gost_3410_12_512;
        Map map = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier4 = PKCSObjectIdentifiers.md2WithRSAEncryption;
        map.put("MD2WITHRSAENCRYPTION", aSN1ObjectIdentifier4);
        algorithms.put("MD2WITHRSA", aSN1ObjectIdentifier4);
        Map map2 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier5 = PKCSObjectIdentifiers.md5WithRSAEncryption;
        map2.put("MD5WITHRSAENCRYPTION", aSN1ObjectIdentifier5);
        algorithms.put("MD5WITHRSA", aSN1ObjectIdentifier5);
        Map map3 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier6 = PKCSObjectIdentifiers.sha1WithRSAEncryption;
        map3.put("SHA1WITHRSAENCRYPTION", aSN1ObjectIdentifier6);
        algorithms.put("SHA1WITHRSA", aSN1ObjectIdentifier6);
        Map map4 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier7 = PKCSObjectIdentifiers.sha224WithRSAEncryption;
        map4.put("SHA224WITHRSAENCRYPTION", aSN1ObjectIdentifier7);
        algorithms.put("SHA224WITHRSA", aSN1ObjectIdentifier7);
        Map map5 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier8 = PKCSObjectIdentifiers.sha256WithRSAEncryption;
        map5.put("SHA256WITHRSAENCRYPTION", aSN1ObjectIdentifier8);
        algorithms.put("SHA256WITHRSA", aSN1ObjectIdentifier8);
        Map map6 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier9 = PKCSObjectIdentifiers.sha384WithRSAEncryption;
        map6.put("SHA384WITHRSAENCRYPTION", aSN1ObjectIdentifier9);
        algorithms.put("SHA384WITHRSA", aSN1ObjectIdentifier9);
        Map map7 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier10 = PKCSObjectIdentifiers.sha512WithRSAEncryption;
        map7.put("SHA512WITHRSAENCRYPTION", aSN1ObjectIdentifier10);
        algorithms.put("SHA512WITHRSA", aSN1ObjectIdentifier10);
        algorithms.put("SHA1WITHRSAANDMGF1", aSN1ObjectIdentifier3);
        algorithms.put("SHA224WITHRSAANDMGF1", aSN1ObjectIdentifier3);
        algorithms.put("SHA256WITHRSAANDMGF1", aSN1ObjectIdentifier3);
        algorithms.put("SHA384WITHRSAANDMGF1", aSN1ObjectIdentifier3);
        algorithms.put("SHA512WITHRSAANDMGF1", aSN1ObjectIdentifier3);
        algorithms.put("SHA3-224WITHRSAANDMGF1", aSN1ObjectIdentifier3);
        algorithms.put("SHA3-256WITHRSAANDMGF1", aSN1ObjectIdentifier3);
        algorithms.put("SHA3-384WITHRSAANDMGF1", aSN1ObjectIdentifier3);
        algorithms.put("SHA3-512WITHRSAANDMGF1", aSN1ObjectIdentifier3);
        Map map8 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier11 = TeleTrusTObjectIdentifiers.rsaSignatureWithripemd160;
        map8.put("RIPEMD160WITHRSAENCRYPTION", aSN1ObjectIdentifier11);
        algorithms.put("RIPEMD160WITHRSA", aSN1ObjectIdentifier11);
        Map map9 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier12 = TeleTrusTObjectIdentifiers.rsaSignatureWithripemd128;
        map9.put("RIPEMD128WITHRSAENCRYPTION", aSN1ObjectIdentifier12);
        algorithms.put("RIPEMD128WITHRSA", aSN1ObjectIdentifier12);
        Map map10 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier13 = TeleTrusTObjectIdentifiers.rsaSignatureWithripemd256;
        map10.put("RIPEMD256WITHRSAENCRYPTION", aSN1ObjectIdentifier13);
        algorithms.put("RIPEMD256WITHRSA", aSN1ObjectIdentifier13);
        algorithms.put("SHA1WITHDSA", aSN1ObjectIdentifier);
        algorithms.put("DSAWITHSHA1", aSN1ObjectIdentifier);
        Map map11 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier14 = NISTObjectIdentifiers.dsa_with_sha224;
        map11.put("SHA224WITHDSA", aSN1ObjectIdentifier14);
        Map map12 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier15 = NISTObjectIdentifiers.dsa_with_sha256;
        map12.put("SHA256WITHDSA", aSN1ObjectIdentifier15);
        Map map13 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier16 = NISTObjectIdentifiers.dsa_with_sha384;
        map13.put("SHA384WITHDSA", aSN1ObjectIdentifier16);
        Map map14 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier17 = NISTObjectIdentifiers.dsa_with_sha512;
        map14.put("SHA512WITHDSA", aSN1ObjectIdentifier17);
        Map map15 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier18 = NISTObjectIdentifiers.id_dsa_with_sha3_224;
        map15.put("SHA3-224WITHDSA", aSN1ObjectIdentifier18);
        Map map16 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier19 = NISTObjectIdentifiers.id_dsa_with_sha3_256;
        map16.put("SHA3-256WITHDSA", aSN1ObjectIdentifier19);
        Map map17 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier20 = NISTObjectIdentifiers.id_dsa_with_sha3_384;
        map17.put("SHA3-384WITHDSA", aSN1ObjectIdentifier20);
        Map map18 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier21 = NISTObjectIdentifiers.id_dsa_with_sha3_512;
        map18.put("SHA3-512WITHDSA", aSN1ObjectIdentifier21);
        Map map19 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier22 = NISTObjectIdentifiers.id_ecdsa_with_sha3_224;
        map19.put("SHA3-224WITHECDSA", aSN1ObjectIdentifier22);
        Map map20 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier23 = NISTObjectIdentifiers.id_ecdsa_with_sha3_256;
        map20.put("SHA3-256WITHECDSA", aSN1ObjectIdentifier23);
        Map map21 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier24 = NISTObjectIdentifiers.id_ecdsa_with_sha3_384;
        map21.put("SHA3-384WITHECDSA", aSN1ObjectIdentifier24);
        Map map22 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier25 = NISTObjectIdentifiers.id_ecdsa_with_sha3_512;
        map22.put("SHA3-512WITHECDSA", aSN1ObjectIdentifier25);
        Map map23 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier26 = NISTObjectIdentifiers.id_rsassa_pkcs1_v1_5_with_sha3_224;
        map23.put("SHA3-224WITHRSA", aSN1ObjectIdentifier26);
        Map map24 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier27 = NISTObjectIdentifiers.id_rsassa_pkcs1_v1_5_with_sha3_256;
        map24.put("SHA3-256WITHRSA", aSN1ObjectIdentifier27);
        Map map25 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier28 = NISTObjectIdentifiers.id_rsassa_pkcs1_v1_5_with_sha3_384;
        map25.put("SHA3-384WITHRSA", aSN1ObjectIdentifier28);
        Map map26 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier29 = NISTObjectIdentifiers.id_rsassa_pkcs1_v1_5_with_sha3_512;
        map26.put("SHA3-512WITHRSA", aSN1ObjectIdentifier29);
        algorithms.put("SHA3-224WITHRSAENCRYPTION", aSN1ObjectIdentifier26);
        algorithms.put("SHA3-256WITHRSAENCRYPTION", aSN1ObjectIdentifier27);
        algorithms.put("SHA3-384WITHRSAENCRYPTION", aSN1ObjectIdentifier28);
        algorithms.put("SHA3-512WITHRSAENCRYPTION", aSN1ObjectIdentifier29);
        algorithms.put("SHA1WITHECDSA", aSN1ObjectIdentifier2);
        algorithms.put("ECDSAWITHSHA1", aSN1ObjectIdentifier2);
        Map map27 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier30 = X9ObjectIdentifiers.ecdsa_with_SHA224;
        map27.put("SHA224WITHECDSA", aSN1ObjectIdentifier30);
        Map map28 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier31 = X9ObjectIdentifiers.ecdsa_with_SHA256;
        map28.put("SHA256WITHECDSA", aSN1ObjectIdentifier31);
        Map map29 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier32 = X9ObjectIdentifiers.ecdsa_with_SHA384;
        map29.put("SHA384WITHECDSA", aSN1ObjectIdentifier32);
        Map map30 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier33 = X9ObjectIdentifiers.ecdsa_with_SHA512;
        map30.put("SHA512WITHECDSA", aSN1ObjectIdentifier33);
        Map map31 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier34 = CryptoProObjectIdentifiers.gostR3411_94_with_gostR3410_94;
        map31.put("GOST3411WITHGOST3410", aSN1ObjectIdentifier34);
        algorithms.put("GOST3411WITHGOST3410-94", aSN1ObjectIdentifier34);
        Map map32 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier35 = CryptoProObjectIdentifiers.gostR3411_94_with_gostR3410_2001;
        map32.put("GOST3411WITHECGOST3410", aSN1ObjectIdentifier35);
        algorithms.put("GOST3411WITHECGOST3410-2001", aSN1ObjectIdentifier35);
        algorithms.put("GOST3411WITHGOST3410-2001", aSN1ObjectIdentifier35);
        Map map33 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier36 = RosstandartObjectIdentifiers.id_tc26_signwithdigest_gost_3410_12_256;
        map33.put("GOST3411WITHECGOST3410-2012-256", aSN1ObjectIdentifier36);
        Map map34 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier37 = RosstandartObjectIdentifiers.id_tc26_signwithdigest_gost_3410_12_512;
        map34.put("GOST3411WITHECGOST3410-2012-512", aSN1ObjectIdentifier37);
        algorithms.put("GOST3411WITHGOST3410-2012-256", aSN1ObjectIdentifier36);
        algorithms.put("GOST3411WITHGOST3410-2012-512", aSN1ObjectIdentifier37);
        algorithms.put("GOST3411-2012-256WITHECGOST3410-2012-256", aSN1ObjectIdentifier36);
        algorithms.put("GOST3411-2012-512WITHECGOST3410-2012-512", aSN1ObjectIdentifier37);
        algorithms.put("GOST3411-2012-256WITHGOST3410-2012-256", aSN1ObjectIdentifier36);
        algorithms.put("GOST3411-2012-512WITHGOST3410-2012-512", aSN1ObjectIdentifier37);
        algorithms.put("SHA1WITHPLAIN-ECDSA", BSIObjectIdentifiers.ecdsa_plain_SHA1);
        algorithms.put("SHA224WITHPLAIN-ECDSA", BSIObjectIdentifiers.ecdsa_plain_SHA224);
        algorithms.put("SHA256WITHPLAIN-ECDSA", BSIObjectIdentifiers.ecdsa_plain_SHA256);
        algorithms.put("SHA384WITHPLAIN-ECDSA", BSIObjectIdentifiers.ecdsa_plain_SHA384);
        algorithms.put("SHA512WITHPLAIN-ECDSA", BSIObjectIdentifiers.ecdsa_plain_SHA512);
        algorithms.put("RIPEMD160WITHPLAIN-ECDSA", BSIObjectIdentifiers.ecdsa_plain_RIPEMD160);
        algorithms.put("SHA1WITHCVC-ECDSA", EACObjectIdentifiers.id_TA_ECDSA_SHA_1);
        algorithms.put("SHA224WITHCVC-ECDSA", EACObjectIdentifiers.id_TA_ECDSA_SHA_224);
        algorithms.put("SHA256WITHCVC-ECDSA", EACObjectIdentifiers.id_TA_ECDSA_SHA_256);
        algorithms.put("SHA384WITHCVC-ECDSA", EACObjectIdentifiers.id_TA_ECDSA_SHA_384);
        algorithms.put("SHA512WITHCVC-ECDSA", EACObjectIdentifiers.id_TA_ECDSA_SHA_512);
        Map map35 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier38 = BCObjectIdentifiers.sphincs256_with_SHA3_512;
        map35.put("SHA3-512WITHSPHINCS256", aSN1ObjectIdentifier38);
        Map map36 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier39 = BCObjectIdentifiers.sphincs256_with_SHA512;
        map36.put("SHA512WITHSPHINCS256", aSN1ObjectIdentifier39);
        Map map37 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier40 = EdECObjectIdentifiers.id_Ed25519;
        map37.put("ED25519", aSN1ObjectIdentifier40);
        Map map38 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier41 = EdECObjectIdentifiers.id_Ed448;
        map38.put("ED448", aSN1ObjectIdentifier41);
        Map map39 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier42 = GMObjectIdentifiers.sm2sign_with_sha256;
        map39.put("SHA256WITHSM2", aSN1ObjectIdentifier42);
        Map map40 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier43 = GMObjectIdentifiers.sm2sign_with_sm3;
        map40.put("SM3WITHSM2", aSN1ObjectIdentifier43);
        Map map41 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier44 = BCObjectIdentifiers.xmss_SHA256ph;
        map41.put("SHA256WITHXMSS", aSN1ObjectIdentifier44);
        Map map42 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier45 = BCObjectIdentifiers.xmss_SHA512ph;
        map42.put("SHA512WITHXMSS", aSN1ObjectIdentifier45);
        Map map43 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier46 = BCObjectIdentifiers.xmss_SHAKE128ph;
        map43.put("SHAKE128WITHXMSS", aSN1ObjectIdentifier46);
        Map map44 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier47 = BCObjectIdentifiers.xmss_SHAKE256ph;
        map44.put("SHAKE256WITHXMSS", aSN1ObjectIdentifier47);
        Map map45 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier48 = BCObjectIdentifiers.xmss_mt_SHA256ph;
        map45.put("SHA256WITHXMSSMT", aSN1ObjectIdentifier48);
        Map map46 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier49 = BCObjectIdentifiers.xmss_mt_SHA512ph;
        map46.put("SHA512WITHXMSSMT", aSN1ObjectIdentifier49);
        Map map47 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier50 = BCObjectIdentifiers.xmss_mt_SHAKE128ph;
        map47.put("SHAKE128WITHXMSSMT", aSN1ObjectIdentifier50);
        Map map48 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier51 = BCObjectIdentifiers.xmss_mt_SHAKE256ph;
        map48.put("SHAKE256WITHXMSSMT", aSN1ObjectIdentifier51);
        algorithms.put("SHA256WITHXMSS-SHA256", aSN1ObjectIdentifier44);
        algorithms.put("SHA512WITHXMSS-SHA512", aSN1ObjectIdentifier45);
        algorithms.put("SHAKE128WITHXMSS-SHAKE128", aSN1ObjectIdentifier46);
        algorithms.put("SHAKE256WITHXMSS-SHAKE256", aSN1ObjectIdentifier47);
        algorithms.put("SHA256WITHXMSSMT-SHA256", aSN1ObjectIdentifier48);
        algorithms.put("SHA512WITHXMSSMT-SHA512", aSN1ObjectIdentifier49);
        algorithms.put("SHAKE128WITHXMSSMT-SHAKE128", aSN1ObjectIdentifier50);
        algorithms.put("SHAKE256WITHXMSSMT-SHAKE256", aSN1ObjectIdentifier51);
        Map map49 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier52 = BCObjectIdentifiers.xmss_SHA256;
        map49.put("XMSS-SHA256", aSN1ObjectIdentifier52);
        Map map50 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier53 = BCObjectIdentifiers.xmss_SHA512;
        map50.put("XMSS-SHA512", aSN1ObjectIdentifier53);
        Map map51 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier54 = BCObjectIdentifiers.xmss_SHAKE128;
        map51.put("XMSS-SHAKE128", aSN1ObjectIdentifier54);
        Map map52 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier55 = BCObjectIdentifiers.xmss_SHAKE256;
        map52.put("XMSS-SHAKE256", aSN1ObjectIdentifier55);
        Map map53 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier56 = BCObjectIdentifiers.xmss_mt_SHA256;
        map53.put("XMSSMT-SHA256", aSN1ObjectIdentifier56);
        Map map54 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier57 = BCObjectIdentifiers.xmss_mt_SHA512;
        map54.put("XMSSMT-SHA512", aSN1ObjectIdentifier57);
        Map map55 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier58 = BCObjectIdentifiers.xmss_mt_SHAKE128;
        map55.put("XMSSMT-SHAKE128", aSN1ObjectIdentifier58);
        Map map56 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier59 = BCObjectIdentifiers.xmss_mt_SHAKE256;
        map56.put("XMSSMT-SHAKE256", aSN1ObjectIdentifier59);
        Map map57 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier60 = BCObjectIdentifiers.qTESLA_p_I;
        map57.put("QTESLA-P-I", aSN1ObjectIdentifier60);
        Map map58 = algorithms;
        ASN1ObjectIdentifier aSN1ObjectIdentifier61 = BCObjectIdentifiers.qTESLA_p_III;
        map58.put("QTESLA-P-III", aSN1ObjectIdentifier61);
        noParams.add(aSN1ObjectIdentifier2);
        noParams.add(aSN1ObjectIdentifier30);
        noParams.add(aSN1ObjectIdentifier31);
        noParams.add(aSN1ObjectIdentifier32);
        noParams.add(aSN1ObjectIdentifier33);
        noParams.add(aSN1ObjectIdentifier);
        noParams.add(aSN1ObjectIdentifier14);
        noParams.add(aSN1ObjectIdentifier15);
        noParams.add(aSN1ObjectIdentifier16);
        noParams.add(aSN1ObjectIdentifier17);
        noParams.add(aSN1ObjectIdentifier18);
        noParams.add(aSN1ObjectIdentifier19);
        noParams.add(aSN1ObjectIdentifier20);
        noParams.add(aSN1ObjectIdentifier21);
        noParams.add(aSN1ObjectIdentifier22);
        noParams.add(aSN1ObjectIdentifier23);
        noParams.add(aSN1ObjectIdentifier24);
        noParams.add(aSN1ObjectIdentifier25);
        noParams.add(aSN1ObjectIdentifier34);
        noParams.add(aSN1ObjectIdentifier35);
        noParams.add(aSN1ObjectIdentifier36);
        noParams.add(aSN1ObjectIdentifier37);
        noParams.add(aSN1ObjectIdentifier39);
        noParams.add(aSN1ObjectIdentifier38);
        noParams.add(aSN1ObjectIdentifier44);
        noParams.add(aSN1ObjectIdentifier45);
        noParams.add(aSN1ObjectIdentifier46);
        noParams.add(aSN1ObjectIdentifier47);
        noParams.add(aSN1ObjectIdentifier48);
        noParams.add(aSN1ObjectIdentifier49);
        noParams.add(aSN1ObjectIdentifier50);
        noParams.add(aSN1ObjectIdentifier51);
        noParams.add(aSN1ObjectIdentifier52);
        noParams.add(aSN1ObjectIdentifier53);
        noParams.add(aSN1ObjectIdentifier54);
        noParams.add(aSN1ObjectIdentifier55);
        noParams.add(aSN1ObjectIdentifier56);
        noParams.add(aSN1ObjectIdentifier57);
        noParams.add(aSN1ObjectIdentifier58);
        noParams.add(aSN1ObjectIdentifier59);
        noParams.add(aSN1ObjectIdentifier60);
        noParams.add(aSN1ObjectIdentifier61);
        noParams.add(aSN1ObjectIdentifier42);
        noParams.add(aSN1ObjectIdentifier43);
        noParams.add(aSN1ObjectIdentifier40);
        noParams.add(aSN1ObjectIdentifier41);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier6);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier7);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier8);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier9);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier10);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier12);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier11);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier13);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier26);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier27);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier28);
        pkcs15RsaEncryption.add(aSN1ObjectIdentifier29);
        ASN1ObjectIdentifier aSN1ObjectIdentifier62 = OIWObjectIdentifiers.idSHA1;
        DERNull dERNull = DERNull.INSTANCE;
        params.put("SHA1WITHRSAANDMGF1", createPSSParams(new AlgorithmIdentifier(aSN1ObjectIdentifier62, dERNull), 20));
        ASN1ObjectIdentifier aSN1ObjectIdentifier63 = NISTObjectIdentifiers.id_sha224;
        params.put("SHA224WITHRSAANDMGF1", createPSSParams(new AlgorithmIdentifier(aSN1ObjectIdentifier63, dERNull), 28));
        ASN1ObjectIdentifier aSN1ObjectIdentifier64 = NISTObjectIdentifiers.id_sha256;
        params.put("SHA256WITHRSAANDMGF1", createPSSParams(new AlgorithmIdentifier(aSN1ObjectIdentifier64, dERNull), 32));
        ASN1ObjectIdentifier aSN1ObjectIdentifier65 = NISTObjectIdentifiers.id_sha384;
        params.put("SHA384WITHRSAANDMGF1", createPSSParams(new AlgorithmIdentifier(aSN1ObjectIdentifier65, dERNull), 48));
        ASN1ObjectIdentifier aSN1ObjectIdentifier66 = NISTObjectIdentifiers.id_sha512;
        params.put("SHA512WITHRSAANDMGF1", createPSSParams(new AlgorithmIdentifier(aSN1ObjectIdentifier66, dERNull), 64));
        ASN1ObjectIdentifier aSN1ObjectIdentifier67 = NISTObjectIdentifiers.id_sha3_224;
        params.put("SHA3-224WITHRSAANDMGF1", createPSSParams(new AlgorithmIdentifier(aSN1ObjectIdentifier67, dERNull), 28));
        ASN1ObjectIdentifier aSN1ObjectIdentifier68 = NISTObjectIdentifiers.id_sha3_256;
        params.put("SHA3-256WITHRSAANDMGF1", createPSSParams(new AlgorithmIdentifier(aSN1ObjectIdentifier68, dERNull), 32));
        ASN1ObjectIdentifier aSN1ObjectIdentifier69 = NISTObjectIdentifiers.id_sha3_384;
        params.put("SHA3-384WITHRSAANDMGF1", createPSSParams(new AlgorithmIdentifier(aSN1ObjectIdentifier69, dERNull), 48));
        ASN1ObjectIdentifier aSN1ObjectIdentifier70 = NISTObjectIdentifiers.id_sha3_512;
        params.put("SHA3-512WITHRSAANDMGF1", createPSSParams(new AlgorithmIdentifier(aSN1ObjectIdentifier70, dERNull), 64));
        digestOids.put(aSN1ObjectIdentifier7, aSN1ObjectIdentifier63);
        digestOids.put(aSN1ObjectIdentifier8, aSN1ObjectIdentifier64);
        digestOids.put(aSN1ObjectIdentifier9, aSN1ObjectIdentifier65);
        digestOids.put(aSN1ObjectIdentifier10, aSN1ObjectIdentifier66);
        digestOids.put(aSN1ObjectIdentifier14, aSN1ObjectIdentifier63);
        digestOids.put(aSN1ObjectIdentifier15, aSN1ObjectIdentifier64);
        digestOids.put(aSN1ObjectIdentifier16, aSN1ObjectIdentifier65);
        digestOids.put(aSN1ObjectIdentifier17, aSN1ObjectIdentifier66);
        digestOids.put(aSN1ObjectIdentifier18, aSN1ObjectIdentifier67);
        digestOids.put(aSN1ObjectIdentifier19, aSN1ObjectIdentifier68);
        digestOids.put(aSN1ObjectIdentifier20, aSN1ObjectIdentifier69);
        digestOids.put(aSN1ObjectIdentifier21, aSN1ObjectIdentifier70);
        digestOids.put(aSN1ObjectIdentifier22, aSN1ObjectIdentifier67);
        digestOids.put(aSN1ObjectIdentifier23, aSN1ObjectIdentifier68);
        digestOids.put(aSN1ObjectIdentifier24, aSN1ObjectIdentifier69);
        digestOids.put(aSN1ObjectIdentifier25, aSN1ObjectIdentifier70);
        digestOids.put(aSN1ObjectIdentifier26, aSN1ObjectIdentifier67);
        digestOids.put(aSN1ObjectIdentifier27, aSN1ObjectIdentifier68);
        digestOids.put(aSN1ObjectIdentifier28, aSN1ObjectIdentifier69);
        digestOids.put(aSN1ObjectIdentifier29, aSN1ObjectIdentifier70);
        digestOids.put(aSN1ObjectIdentifier4, PKCSObjectIdentifiers.md2);
        digestOids.put(PKCSObjectIdentifiers.md4WithRSAEncryption, PKCSObjectIdentifiers.md4);
        digestOids.put(aSN1ObjectIdentifier5, PKCSObjectIdentifiers.md5);
        digestOids.put(aSN1ObjectIdentifier6, aSN1ObjectIdentifier62);
        digestOids.put(aSN1ObjectIdentifier12, TeleTrusTObjectIdentifiers.ripemd128);
        digestOids.put(aSN1ObjectIdentifier11, TeleTrusTObjectIdentifiers.ripemd160);
        digestOids.put(aSN1ObjectIdentifier13, TeleTrusTObjectIdentifiers.ripemd256);
        Map map59 = digestOids;
        ASN1ObjectIdentifier aSN1ObjectIdentifier71 = CryptoProObjectIdentifiers.gostR3411;
        map59.put(aSN1ObjectIdentifier34, aSN1ObjectIdentifier71);
        digestOids.put(aSN1ObjectIdentifier35, aSN1ObjectIdentifier71);
        digestOids.put(aSN1ObjectIdentifier36, RosstandartObjectIdentifiers.id_tc26_gost_3411_12_256);
        digestOids.put(aSN1ObjectIdentifier37, RosstandartObjectIdentifiers.id_tc26_gost_3411_12_512);
        digestOids.put(aSN1ObjectIdentifier42, aSN1ObjectIdentifier64);
        digestOids.put(aSN1ObjectIdentifier43, GMObjectIdentifiers.sm3);
    }

    private static RSASSAPSSparams createPSSParams(AlgorithmIdentifier algorithmIdentifier, int i) {
        return new RSASSAPSSparams(algorithmIdentifier, new AlgorithmIdentifier(PKCSObjectIdentifiers.id_mgf1, algorithmIdentifier), new ASN1Integer(i), new ASN1Integer(1L));
    }

    private static AlgorithmIdentifier generate(String str) {
        String upperCase = Strings.toUpperCase(str);
        ASN1ObjectIdentifier aSN1ObjectIdentifier = (ASN1ObjectIdentifier) algorithms.get(upperCase);
        if (aSN1ObjectIdentifier != null) {
            return noParams.contains(aSN1ObjectIdentifier) ? new AlgorithmIdentifier(aSN1ObjectIdentifier) : params.containsKey(upperCase) ? new AlgorithmIdentifier(aSN1ObjectIdentifier, (ASN1Encodable) params.get(upperCase)) : new AlgorithmIdentifier(aSN1ObjectIdentifier, DERNull.INSTANCE);
        }
        throw new IllegalArgumentException(b.j("Unknown signature type requested: ", upperCase));
    }

    @Override // org.bouncycastle.operator.SignatureAlgorithmIdentifierFinder
    public AlgorithmIdentifier find(String str) {
        return generate(str);
    }
}
